/* Generated By:JavaCC: Do not edit this line. RobotConstants.java */
package uniandes.lym.robot.control;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RobotConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MOVE = 5;
  /** RegularExpression Id. */
  int RIGHT = 6;
  /** RegularExpression Id. */
  int LEFT = 7;
  /** RegularExpression Id. */
  int ROTATE = 8;
  /** RegularExpression Id. */
  int LOOK = 9;
  /** RegularExpression Id. */
  int DROP = 10;
  /** RegularExpression Id. */
  int FREE = 11;
  /** RegularExpression Id. */
  int PICK = 12;
  /** RegularExpression Id. */
  int POP = 13;
  /** RegularExpression Id. */
  int CHECK = 14;
  /** RegularExpression Id. */
  int BLOCKEDP = 15;
  /** RegularExpression Id. */
  int NOP = 16;
  /** RegularExpression Id. */
  int BLOCK = 17;
  /** RegularExpression Id. */
  int REPEAT = 18;
  /** RegularExpression Id. */
  int IF = 19;
  /** RegularExpression Id. */
  int DEFINE = 20;
  /** RegularExpression Id. */
  int TO = 21;
  /** RegularExpression Id. */
  int OUTPUT = 22;
  /** RegularExpression Id. */
  int END = 23;
  /** RegularExpression Id. */
  int NUMERO = 24;
  /** RegularExpression Id. */
  int DIGIT = 25;
  /** RegularExpression Id. */
  int LETRAS = 26;
  /** RegularExpression Id. */
  int MAY = 27;
  /** RegularExpression Id. */
  int ID = 28;
  /** RegularExpression Id. */
  int PARAM = 29;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"    \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"MOVE\"",
    "\"RIGHT\"",
    "\"LEFT\"",
    "\"ROTATE\"",
    "\"LOOK\"",
    "\"DROP\"",
    "\"FREE\"",
    "\"PICK\"",
    "\"POP\"",
    "\"CHECK\"",
    "\"BLOCKEDP\"",
    "\"NOP\"",
    "\"BLOCK\"",
    "\"REPEAT\"",
    "\"IF\"",
    "\"DEFINE\"",
    "\"TO\"",
    "\"OUTPUT\"",
    "\"END\"",
    "<NUMERO>",
    "<DIGIT>",
    "<LETRAS>",
    "<MAY>",
    "<ID>",
    "<PARAM>",
    "\"(\"",
    "\")\"",
    "\"\\n\"",
    "\"[\"",
    "\"]\"",
    "\" :c\"",
  };

}
